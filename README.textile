h1. Destroy App Core

h2. Overview

Destroy App Core is a library for AIR application development.

h2. Hotkeys

h3. Creating and adding

To create and add a hotkey to the manager, you can manually instantiate the hotkey and use the addHotkey method.

<pre>
var hotkeyManager:HotkeyManager = new HotkeyManager();
hotkeyManager.addStage(stage);

var openHotkey:Hotkey = new Hotkey("command+o");

hotkeyManager.addHotkey(openHotkey);
</pre>

Or, you can use the addHotkeyCombo method to instantiate and automatically add a hotkey to the manager in one line.

<pre>
var openHotkey:Hotkey = hotkeyManager.addHotkeyCombo("command+o");
</pre>

h3. Listening

Hotkeys use signals to indicate they have been executed, so you can listen directly to the signal or map it to a command.

<pre>
hotkeyManager.addHotkeyCombo("command+c").executed.add(copyHotkeyHandler);
</pre>

<pre>
signalCommandMap.mapSignal(hotkeyManager.addHotkeyCombo("command+c").executed, CopyCommand);
</pre>

h3. Case-sensitivity

Char-based hotkeys are case-sensitive, as demonstrated with the conditions below:

<pre>
new Hotkey("command+f") != new Hotkey("command+F");
new Hotkey("command+F") == new Hotkey("command+shift+" + Keyboard.F);
</pre>

h3. Explicit modifiers

Though you can use 'F' to indicate 'shift+f', you can make your hotkeys easier to understand with explicit modifiers and key codes.

<pre>
new Hotkey("command+" + Keyboard.F);
new Hotkey("command+shift+" + Keyboard.F);
</pre>

h3. Special characters

Char-based hotkeys can only use command and control modifiers, so using shift and alt will throw an error.

<pre>
new Hotkey("shift+g");
new Hotkey("alt+g");
</pre>

Instead, use key codes.

<pre>
new Hotkey("shift+" + Keyboard.G);
new Hotkey("alt+" + Keyboard.G);
</pre>

Or, if the intended hotkey is '©', use that char, since its hotkey on a western keyboard (alt+g) might be different on other keyboards.

<pre>
new Hotkey("©");
</pre>

h3. Numbers

Don't use char-based hotkeys for numbers because numbers will be parsed as key codes.

<pre>
new Hotkey("command+8") == new Hotkey("command+" + Keyboard.BACKSPACE);
</pre>

Instead, use key codes.

<pre>
new Hotkey("command+" + Keyboard.NUMBER_8);
</pre>